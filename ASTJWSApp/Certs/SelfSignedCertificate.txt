1. CREATE PRIVATE KEYS
openssl genrsa -des3 -out client_key.pem 2048
openssl genrsa -des3 -out server_key.pem 2048


2. CREATE SELF-SIGNED CERTIFICATES
openssl req -new -x509 -key client_key.pem -out client.pem -days 365
openssl req -new -x509 -key server_key.pem -out server.pem -days 365

3. CREATE TRUST STORES
keytool \
      -import \
      -v \
      -trustcacerts \
      -alias 0 \
      -file <(openssl x509 -in server.pem) \
      -keystore clienttruststore.bks \
      -storetype BKS \
      -provider org.bouncycastle.jce.provider.BouncyCastleProvider \
      -providerpath ./bcprov-jdk15on-159.jar \
      -storepass password

keytool \
      -import \
      -v \
      -trustcacerts \
      -alias 0 \
      -file <(openssl x509 -in client.pem) \
      -keystore servertruststore.bks \
      -storetype BKS \
      -provider org.bouncycastle.jce.provider.BouncyCastleProvider \
      -providerpath ./bcprov-jdk15on-159.jar \
      -storepass password
     

4. COMBINE KEYS AND CERTIFICATES
openssl pkcs12 -export -out client.p12 -inkey client_key.pem -in client.pem
openssl pkcs12 -export -out server.p12 -inkey server_key.pem -in server.pem

openssl pkcs12 -export -out client.pfx -inkey client_key.pem -in client.pem
openssl pkcs12 -export -out server.pfx -inkey server_key.pem -in server.pem

5. CONVERT FROM PKCS12 (this step is not working, even i tried the same in stop 3 here)
keytool –importkeystore –srckeystore client.p12 –srcstoretype pkcs12 –destkeystore client.bks –deststoretype bks –provider org.bouncycastle.jce.provider.BouncyCastleProvider –providerpath ./bcprov-jdk15on-159.jar
keytool –importkeystore –srckeystore server.p12 –srcstoretype pkcs12 –destkeystore server.bks –deststoretype bks –provider org.bouncycastle.jce.provider.BouncyCastleProvider –providerpath ./bcprov-jdk15on-159.jar



openssl x509 -in client.pem -text -noout
openssl x509 -in server.pem -text -noout

==========================================================================================

Step 1: Create your self-signed certificate and create .bks file
keytool -genkey -alias tjws -keystore tjws.keystore -validity 365
keytool -export -alias tjws -keystore tjws.keystore -file tjws.cer
keytool -import -alias tjws -file tjws.cer -keystore tjws.bks -storetype BKS -providerClass org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath ./BouncyCastle/bcprov-jdk15on-159.jar

Setp-2: Put our .keystore file in /androidappdir/res/raw/



========
openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365
keytool -import -file cert.pem -keystore tjws.bks -storetype BKS -providerClass org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath ../bcprov-jdk15on-159.jar
---------

openssl genrsa -out tjws.key 4096
openssl rsa -in tjws.key -out tjws.key
openssl req -sha256 -new -key tjws.key -out tjws.csr -subj '/CN=localhost'
openssl x509 -req -sha256 -days 365 -in tjws.csr -signkey tjws.key -out tjws.crt
cat tjws.crt tjws.key > cert.pem
keytool -import -file cert.pem -keystore tjws.bks -storetype BKS -providerClass org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath ../bcprov-jdk15on-159.jar


openssl x509 -req -sha256 -days 365 -in tjws.csr -signkey tjws.key -out tjws.pem
keytool -import -file cert.pem -keystore tjws.bks -storetype BKS -providerClass org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath ../bcprov-jdk15-146.jar



